<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pandas on HanSang Banetta Kim</title>
    <link>https://banetta.github.io/tags/pandas/</link>
    <description>Recent content in Pandas on HanSang Banetta Kim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <copyright>© {year} HanSang Banetta Kim</copyright>
    <lastBuildDate>Thu, 02 Sep 2021 00:44:17 +0900</lastBuildDate>
    
	<atom:link href="https://banetta.github.io/tags/pandas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Pandas] DataFrame 제어</title>
      <link>https://banetta.github.io/post/15_pandas_dataframe_control/</link>
      <pubDate>Thu, 02 Sep 2021 00:44:17 +0900</pubDate>
      
      <guid>https://banetta.github.io/post/15_pandas_dataframe_control/</guid>
      <description>Json을 DataFrame으로 바꾸기 import numpy as np import pandas as pd import json with open(&#39;./data/student_json_column.json&#39;, &#39;r&#39;, encoding=&#39;utf8&#39;) as f: data_dict = json.load(f) # 잘 생각해보면 json 형식이 python의 dictionary와 유사함 print(data_dict) df = pd.DataFrame.from_dict(data_dict, orient=&#39;columns&#39;)  OpenAPI를 활용하여 Data를 가져와서 DataFrame으로 만들어보자 여기서는 OpenAPI를 사용하기 쉬운 영화진흥위원회 OpenAPI를 사용했다.
# 1. 필요한 module부터 import import numpy as np import pandas as pd import json import urllib # 2. 영화진흥위원회 Open API를 호출하기 위한 url이 필요 movie_url = &#39;http://www.</description>
    </item>
    
    <item>
      <title>[Pandas] Pandas</title>
      <link>https://banetta.github.io/post/14_pandas_basic/</link>
      <pubDate>Sun, 29 Aug 2021 01:26:50 +0900</pubDate>
      
      <guid>https://banetta.github.io/post/14_pandas_basic/</guid>
      <description>Pandas Pandas는 고유하게 정의된 2개의 자료구조를 가지고 있다.
  Series : 1차원, 같은 데이터 타입을 사용 DataFrame : 2차원, 여러개의 Series를 합쳐서 Table 구조로 만든 자료구조   Series import numpy as np import pandas as pd # Series를 만들어보자 s = pd.Series([-1, 8, 10, 99], dtype=np.int32, index=[&#39;b&#39;, &#39;k&#39;, &#39;b&#39;, &#39;c&#39;]) print(s) # pandas는 index를 지정할 수 있다 print(s.values) # Series가 가지고 있는 값에 대한 ndarray만 추출 # [-1. 5.</description>
    </item>
    
  </channel>
</rss>